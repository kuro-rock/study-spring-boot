plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// Copy the resources referred by the Doma annotation processors to
// the destinationDir of the compileJava task
task copyDomaResources(type: Sync)  {
	from sourceSets.main.resources.srcDirs
	into compileJava.destinationDir
	include "doma.compile.config"
	include "META-INF/**/*.sql"
	include "META-INF/**/*.script"
}

compileJava {
	// Depend on the above task
	dependsOn copyDomaResources
	options.encoding = "UTF-8"
}

compileTestJava {
	options.encoding = "UTF-8"
	// Disable the annotation processors during the test run
	options.compilerArgs = ["-proc:none"]
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'

	annotationProcessor "org.seasar.doma.boot:doma-spring-boot-starter:1.1.1"
	compile("org.seasar.doma.boot:doma-spring-boot-starter:1.1.1") {
		exclude group: "org.springframework.boot"
	}

	compile 'org.apache.commons:commons-lang3'
	compile "org.modelmapper:modelmapper:0.7.5"
}

test {
	useJUnitPlatform()
}
